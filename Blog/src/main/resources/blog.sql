/*
 Navicat Premium Data Transfer

 Source Server         : root
 Source Server Type    : MySQL
 Source Server Version : 80023
 Source Host           : localhost:3306
 Source Schema         : blog

 Target Server Type    : MySQL
 Target Server Version : 80023
 File Encoding         : 65001

 Date: 21/06/2022 10:36:14
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for blog
-- ----------------------------
DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `author_id` bigint NOT NULL,
  `author_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `author_avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `cover` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `des` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `tag` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL,
  `date` datetime NOT NULL,
  `status` tinyint NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog
-- ----------------------------
INSERT INTO `blog` VALUES (1, 1, 'Aris Pattakos', 'https://i.postimg.cc/kgz8qKwB/Aris-Pattakos.jpg', 'Angular vs React vs Vue ', 'https://s2.loli.net/2022/06/13/9BZDcIQkMaE8Ydp.jpg', 'we’ll look into their architectural differences', 'There are three frameworks for building web applications that every frontend developer has heard about: React, Vue.js, and Angular.\n\nReact is a UI library, Angular is a fully-fledged front-end framework, while Vue.js is a progressive framework.\n\nThey can be used almost interchangeably to build front-end applications, but they’re not 100 percent the same, so it makes sense to compare them and understand their differences.\n\nEach framework is component-based and allows the rapid creation of UI features.\n\nHowever, they all have a different structure and architecture — so first, we’ll look into their architectural differences to understand the philosophy behind them.\n\n# Architecture\n## React\nReact doesn’t enforce a specific project structure, and as you can see from the official “Hello World” example below, you can start using React with just a few lines of code.\n\n```\nReactDOM.render(\n<h1>Hello, world!</h1>,\ndocument.getElementById(\'root\')\n);\n```\nReact can be used as a UI library to render elements, without enforcing a specific project structure, and that’s why it’s not strictly a framework.\n\nReact Elements are the smallest building blocks of React apps. They are more powerful than DOM elements because the React DOM makes sure to update them efficiently whenever something changes.\n\nComponents are larger building blocks that define independent and reusable pieces to be used throughout the application. They accept inputs called props and produce elements that are then displayed to the user.\n\nReact is based on JavaScript, but it’s mostly combined with JSX (JavaScript XML), a syntax extension that allows you to create elements that contain HTML and JavaScript at the same time.\n\nAnything you create with JSX could also be created with the React JavaScript API, but most developers prefer JSX because it’s more intuitive.\n\n## Vue\nThe Vue.js core library focuses on the View layer only. It’s called a progressive framework because you can extend its functionality with official and third-party packages, such as Vue Router or Vuex, to turn it into an actual framework.\n\nAlthough Vue is not strictly associated with the MVVM (Model-View-ViewModel) pattern, its design was partly inspired by it. With Vue, you’ll be working mostly on the ViewModel layer, to make sure that the application data is processed in a way that allows the framework to render an up-to-date View.\n\nVue’s templating syntax lets you create View components, and it combines familiar HTML with special directives and features. This templating syntax is preferred, even though raw JavaScript and JSX are also supported.\n\nComponents in Vue are small, self-contained, and can be reused throughout the application. Single File Components (SFCs) with the .vue extension contain HTML, CSS, and JavaScript so that all relevant code resides in one file.\n\nSFCs are the recommended way to organize code in Vue.js projects, especially larger ones. Tools such as Webpack or Browserify are required to transpile SFCs into working JavaScript code.\n\n## Angular\nIn this article, I’m discussing Angular 2, and not the first version of the framework which is now known as AngularJS.\n\nAngularJS, the original framework, is an MVC (Model-View-Controller)) framework. But in Angular 2, there’s no strict association with MV*-patterns as it is also component-based.\n\nProjects in Angular are structured into Modules, Components, and Services. Each Angular application has at least one root component and one root module.\n\nEach component in Angular contains a Template, a Class that defines the application logic, and MetaData (Decorators). The metadata for a component tells Angular where to find the building blocks that it needs to create and present its view.\n\nAngular templates are written in HTML but can also include Angular template syntax with special directives to output reactive data and render multiple elements, among other things.\n\nServices in Angular are used by Components to delegate business-logic tasks such as fetching data or validating input. They are a distinct part of Angular applications. While Angular doesn’t enforce their use, it’s highly suggested to structure apps as a set of distinct services that can be reused.\n\nAngular is built in TypeScript, so its use is recommended to get the most seamless experience, but plain JavaScript is also supported.\n\n# Popularity\n## React\nReact is one of the most popular JavaScript projects with 160k stars on GitHub. It’s developed and maintained by Facebook, and it’s used internally in many of their projects. Additionally, it powers over 2 million websites, according to BuiltWith‘s usage statistics.\n\n## Vue\nOut of the three frameworks, Vue has the most stars on GitHub, with 176k stars. The project is developed and led by ex-Googler Evan You. It’s a very strong, independent project in the open-source community and is used by over 1 million websites, according to BuiltWith.\n\n## Angular\nAngular is developed by Google, but surprisingly it’s not used in some of their flagship products such as Search or Youtube. It’s often used in enterprise projects, and it powers over 97,000 websites based on BuiltWith‘s data.\n\nIt’s the least starred among the three frameworks, with 68k stars on GitHub. However, when switching from Angular 1 to Angular 2, they created an entirely new repository instead of continuing the AngularJS project, which also has 59k stars.\n\n# Ecosystem\nOpen-source packages save you precious time when developing applications. Not just that, but they are often better than custom-made components and packages because they’re battle-tested.\n\nIt’s important to look at the availability of ready-to-use components, themes, and other tools that can help you create new features more easily.\n\n## React\nMany front-end applications rely on global state management to store information, such as who is logged in and other user settings.\n\nThe most popular project for JavaScript state management is Redux. Most developers use the official React bindings for Redux, which are maintained by the Redux team.\n\nBecause of React’s popularity, finding input components and ready-to-use elements is extremely easy. They’re all just a Google or GitHub search away.\n\nThe React ecosystem also includes React Native that allows you to build native iOS and Android applications from a single codebase written in React. So, React can be a great choice for building mobile applications using web technologies, too.\n\nReact is part of the MERN stack, which contains MongoDB, ExpressJS, React, and NodeJS. The great thing about this combination is that a single language — JavaScript — powers the whole application.\n\n## Vue\nEven though Redux can be used in Vue, there are no official bindings. But that should not worry you because Vuex is the official state management library made specifically for Vue applications. Aside from integrating very well with Vue, it’s easy to debug using Vue’s developer tools.\n\nIn the early days of Vue, it was harder to find ready-to-use components. Since the community has grown, there’s a wide range of input components and advanced elements that you can use to speed up your development.\n\nFor mobile app development, there’s an up and coming project called Weex. Weex is developed and used by Alibaba, but it’s not as mature and powerful as React Native. What’s more, since the project is developed and used more in China, it’s harder to find documentation and solutions to issues in English.\n\nVue integrates well with Laravel, and that’s why they are often used together. Laravel offers complete JavaScript and CSS scaffolding to enable the use of Vue in new projects.\n\n## Angular\nFor state management in Angular, you can use the NgRx project. It has been inspired by Redux, but it’s specifically created for Angular.\n\nAs in the case of Vue and React, there are many ready-to-use components that you can import into your projects. What’s slightly different about Angular is that there are many official components in the Angular Material project. This is an official project by Google that offers Material Design components for Angular applications.\n\nYou can build cross-platform mobile applications in Angular using NativeScript. It supports Vue as well, but the Angular support is more mature.\n\nAngular is part of the well-known MEAN stack that combines Angular with MongoDB, ExpressJS, and NodeJS. Similar to the MERN stack, it relies entirely on JavaScript for both the front-end and back-end.\n\n# Common Technologies\nAngular, React, and Vue can all be used to develop Progressive Web Apps, also known as PWAs.\n\nPWAs are not mobile applications but web applications that smartphone users can add as shortcuts to their home screen and offer a look and feel similar to native mobile apps.\n\nYou can also find premium templates and pre-made applications for each framework, but Angular and React have more premium options available than Vue.\n\n# Performance\nWhen choosing a framework or library, you need to think about performance as well.\n\nIn many cases, you won’t have to worry about performance, especially if you’re building a small project. However, the more a project grows in scope and complexity, performance can (and will) become a concern.\n\nIt’s important to note that the quality of development and following best practices when it comes to web performance is more important than the choice of framework.\n\nBut since there are some performance metrics and differences, I’ll look into them and explain how each could affect your development efforts.\n\n# JS Framework Benchmark: Angular vs React vs Vue\nThe results of the JS Framework Benchmark show that they all perform quite well at most benchmarks, such as creating or appending rows in a table.\n\n![image](https://athemes.com/wp-content/uploads/Screenshot-from-2020-09-20-15-31-11.png)\n\nAs you can see above, Vue is considerably slower than Angular and React at selecting rows. On the other hand, Angular and React are not very efficient at swapping rows.\n\nThese are the only substantial differences in rendering benchmarks — and in most cases, won’t produce noticeable results. Since selecting rows is a more common functionality than swapping rows, I’d say that this benchmark puts Vue into third place behind Angular and React that share the top position.\n\nWhen it comes to memory and booting time, React and Vue score very well, but Angular is a bit slower. Angular can take 150ms to boot a basic script and requires more memory to run.\n\n# Perf Track: Angular vs React vs Vue\n\nPerf Track by Google Chrome Labs shows production data from thousands of websites. These stats are affected by many other things and not only the framework of choice, but let’s look at the numbers.\n\n![image](https://athemes.com/wp-content/uploads/Screenshot-from-2020-09-20-13-19-39-3-2-1.png)\n\n## First Contentful Paint\nVue and React websites rank higher for this metric compared to Angular that can take more time to boot and present content to the user.\n\n## Largest Contentful Paint\nAngular is also the slowest among the three frameworks in rendering a complete page, with only 27 percent of Angular websites scoring in the acceptable range.\n\n## First Input Delay\nFor all three frameworks, more than 80 percent of websites are in the acceptable range for the first input delay, which shows how much it takes until the user can interact with the page.\n\n## JavaScript Bytes\nThe most lightweight applications are by far the ones developed with Vue, with 68 percent of Vue apps loading less than 1MB of JavaScript. On the other hand, Angular and React applications tend to have a larger code size.\n\n## How to Use These Metrics\nYou can see a trend from these figures, but you shouldn’t be too quick to draw conclusions. For the last figure, for example, an explanation could be that Vue is used to develop more lightweight applications while Angular is used for larger projects.\n\nThe statistics can help in guiding you into making a good decision, but you cannot use them to prove that one framework is faster or better than the other.\n\n# Advanced Features\nFor more advanced applications, the front-end framework in use should be able to perform some tasks that improve performance and can scale better.\n\nTwo technologies that are key are server-side rendering (SSR) and virtualization.\n\n## React\nReact supports server-side rendering with the official ReactDOMServer package. For virtualization, you can use a popular third-party tool called React Virtualized.\n\n## Vue\nServer-side rendering is supported in Vue as well with the official SSR package. In addition, you can also use the Nuxt.js framework which is built on top of Vue and supports SSR.\n\nThe virtualization options in Vue are not that strong, unfortunately. In my opinion, Vue Virtual Scroll List is the best solution for virtual scrolling, but it’s a bit buggy and not as stable as the options for React and Angular.\n\n## Angular\nAngular has the official Angular Universal package for SSR, and an official component for virtual scrolling and efficient rendering of large lists.\n\n# Learning Curve\nHow easy is it to learn each of these frameworks?\n\nTo answer this question, we need to look at the complexity of each framework and the concepts they introduce.\n\n## React\nIn its most basic use case, React is the least complex of the three frameworks. That is because you only need to import the library, then you can start writing your React application with a few lines of code.\n\nBut aside from the Hello World example, most React applications are component-based and don’t just render a few elements on the page.\n\nOne thing that some developers find odd or difficult about React, is the fact that learning JSX is a one-way street. You can use raw JavaScript as well, but since most React developers use JSX, learning it is pretty much unavoidable.\n\nThis is the main thing that can make React’s learning curve a bit steeper, but aside from that, it’s a library that’s easy to learn for developers who know JavaScript and understand web development concepts.\n\n## Vue\nVue is a bit more complex to set up than React. You can use it as a library to define components that you can use throughout your HTML — but similar to React, this is not how most projects are built.\n\nMost Vue projects will have a root component named App.vue and a number of child components for displaying various things.\n\nWhen it comes to syntax, the only new thing you have to learn is Vue’s template syntax, which is very easy to grasp if you know HTML. Basic directives, such as v-if and v-for for conditional rendering and list rendering, are easy to understand even for beginners.\n\nAdditionally, Vue’s single-file components keep all the front-end code in one place, making it easy to organize new projects.\n\nVue is the easiest to learn, in my opinion, because of its simplicity and intuitive syntax.\n\n## Angular\nAngular has the most complex project structure out of the three, and since it’s a fully-blown front-end framework, it relies on more concepts.\n\nAside from components, Angular supports modules and services. It expects you to write and design your codebase in a specific way that makes your project more maintainable when it scales up.\n\nAs for syntax, since Angular works best with TypeScript, it’s important that you know TypeScript when building an Angular project.\n\nSame as with Vue, you have to also familiarize yourself with the HTML-like syntax so that you can start coding new UI features with Angular.\n\nIn my opinion, Angular is the hardest to learn for the average developer because it’s more complex and relies on TypeScript.\n\n# Future Predictions\nMany open-source projects and frameworks fade into oblivion and become unmaintained. Should you be worried about any of the frameworks we’re discussing here?\n\nAlthough we can’t fully predict what happens, ongoing development work is a good indicator of the health of these projects. Popularity and growth are also important metrics to predict the longevity of a project, so let’s take a look at each framework.\n\n## React\nReact v17.0 has been released, but surprisingly, it doesn’t include any new features for developers.\n\nThe major change is that this new version makes it easier to upgrade React itself. You can upgrade just some parts of React from the older version to the newer one, without having to upgrade the whole project.\n\nIf your application relies on features that change or get deprecated with the new version, you can keep the old version to keep this functionality alive. This update makes React a great long-term choice because it makes it easier to stay up to date with new versions.\n\nReact has grown by 44 percent since last year in weekly npm downloads. In absolute numbers, it’s still the most downloaded of the three projects.\n\n## Vue\nVue 3 has been released in September 2020, and it tackles many serious issues that Vue 2 has in large projects. It introduces the Composition API which is inspired by React Hooks and makes it easier to reuse logic across components.\n\nThe whole project was rewritten in TypeScript, which improves TypeScript support in new Vue projects while also makes the project more maintainable.\n\nVue 3 is a much-needed upgrade and makes Vue a better fit for large-scale projects.\n\nVue’s weekly downloads have grown by 87 percent since last year, making Vue the fastest growing framework in relative terms. If Vue can keep up this growth rate, then it will certainly surpass Angular soon.\n\n## Angular\nAngular lately introduced the Ivy Compiler. It reduces build times, optimizes assets, allows for faster testing, and generally improves developer experience.\n\nThe Angular team releases major updates multiple twice a year, which can include new features or just bring the framework up to speed with new browser versions.\n\nAngular has grown by around 50 percent in weekly downloads since last year, so it’s still a popular project.\n\n# Conclusion\nAngular, React, and Vue are all under very active development. They regularly release new versions and maintain the existing ones. As the current level of support is high in each case, you can safely use any of these frameworks.\n\nIt’s important to note that Angular is not growing as fast as before, while Vue — even though it started more recently — seems to be growing a lot.\n\nAs previously stated, we can’t predict which frameworks will remain relevant in the long term, but each project has a great community behind it and is constantly evolving.\n\nMy goal with this article was to explain the architectural differences, break down each framework’s strengths and weaknesses, and compare them wherever it’s applicable.\n\nBefore jumping into a new framework, there are a few things to consider.\n\nFirst, your team’s experience can be a deciding factor when choosing a new technology.\n\nSimilarly, you have to consider the talent that is available in your area so that you can hire developers for your project.\n\nFinally, when it comes to the project itself, the complexity and scope can also affect your choice of framework.\n\nBy taking into account all the key differences, I hope you can decide which is the best front-end framework for your goals and needs.', 'Vue,React,Angular', '2022-06-01 14:18:06', 0);
INSERT INTO `blog` VALUES (2, 1, 'Aris Pattakos', 'https://i.postimg.cc/kgz8qKwB/Aris-Pattakos.jpg', '20 Best Free & Premium VueJS Admin Templates 2022', 'https://s2.loli.net/2022/06/13/JOKx4LHVcl8kXvm.png', '21 Best Free & Premium VueJS Admin Templates 2022', 'Angular, React, and Vue are all under very active development. They regularly release new versions and maintain the existing ones. As the current level of support is high in each case, you can safely use any of these frameworks.\n\nIt’s important to note that Angular is not growing as fast as before, while Vue — even though it started more recently — seems to be growing a lot.\n\nAs previously stated, we can’t predict which frameworks will remain relevant in the long term, but each project has a great community behind it and is constantly evolving.\n\nMy goal with this article was to explain the architectural differences, break down each framework’s strengths and weaknesses, and compare them wherever it’s applicable.\n\nBefore jumping into a new framework, there are a few things to consider.\n\nFirst, your team’s experience can be a deciding factor when choosing a new technology.\n\nSimilarly, you have to consider the talent that is available in your area so that you can hire developers for your project.\n\nFinally, when it comes to the project itself, the complexity and scope can also affect your choice of framework.\n\nBy taking into account all the key differences, I hope you can decide which is the best front-end framework for your goals and needs.', 'Vue,Template,Collection', '2022-06-02 14:18:30', 0);
INSERT INTO `blog` VALUES (3, 1, 'Aris Pattakos', 'https://i.postimg.cc/kgz8qKwB/Aris-Pattakos.jpg', '14 Best Vue UI Component Libraries 2022', 'https://s2.loli.net/2022/06/13/3LP5UwjyGMQ7aZS.png', '14 Best Vue UI Component Libraries 2022', 'Angular, React, and Vue are all under very active development. They regularly release new versions and maintain the existing ones. As the current level of support is high in each case, you can safely use any of these frameworks.\n\nIt’s important to note that Angular is not growing as fast as before, while Vue — even though it started more recently — seems to be growing a lot.\n\nAs previously stated, we can’t predict which frameworks will remain relevant in the long term, but each project has a great community behind it and is constantly evolving.\n\nMy goal with this article was to explain the architectural differences, break down each framework’s strengths and weaknesses, and compare them wherever it’s applicable.\n\nBefore jumping into a new framework, there are a few things to consider.\n\nFirst, your team’s experience can be a deciding factor when choosing a new technology.\n\nSimilarly, you have to consider the talent that is available in your area so that you can hire developers for your project.\n\nFinally, when it comes to the project itself, the complexity and scope can also affect your choice of framework.\n\nBy taking into account all the key differences, I hope you can decide which is the best front-end framework for your goals and needs.', 'Vue,UI,Collection', '2022-06-03 14:18:51', 0);
INSERT INTO `blog` VALUES (4, 2, 'Colin Newcomer', 'https://i.postimg.cc/VNtt6vH4/Colin-Newcomer.jpg', 'Create a Python Web Spider in 60 Seconds or Less', 'https://s2.loli.net/2022/06/13/64YUw7V1r8npq5D.png', 'Create a Python Web Spider in 60 Seconds or Less', 'Angular, React, and Vue are all under very active development. They regularly release new versions and maintain the existing ones. As the current level of support is high in each case, you can safely use any of these frameworks.\n\nIt’s important to note that Angular is not growing as fast as before, while Vue — even though it started more recently — seems to be growing a lot.\n\nAs previously stated, we can’t predict which frameworks will remain relevant in the long term, but each project has a great community behind it and is constantly evolving.\n\nMy goal with this article was to explain the architectural differences, break down each framework’s strengths and weaknesses, and compare them wherever it’s applicable.\n\nBefore jumping into a new framework, there are a few things to consider.\n\nFirst, your team’s experience can be a deciding factor when choosing a new technology.\n\nSimilarly, you have to consider the talent that is available in your area so that you can hire developers for your project.\n\nFinally, when it comes to the project itself, the complexity and scope can also affect your choice of framework.\n\nBy taking into account all the key differences, I hope you can decide which is the best front-end framework for your goals and needs.', 'Python,Spider', '2022-06-04 14:19:44', 0);

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `about` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `username` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `status` tinyint UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (1, 'Aris Pattakos', 'https://i.postimg.cc/kgz8qKwB/Aris-Pattakos.jpg', 'Aris Pattakos is an entrepreneur and part of Forbes 30 under 30 Greece. He writes primarily about technology, startups, and web development.', 'ArisPattakos', 'ce6436f72a82043689edb99de26d18c8', 0);
INSERT INTO `user` VALUES (2, 'Colin Newcomer', 'C:\\Users\\YinLi\\Desktop\\images\\Colin Newcomer.jpg', 'Colin Newcomer is a freelance writer for hire with a background in SEO and affiliate marketing. He helps clients grow their web visibility by writing primarily about digital marketing and WordPress. You can hire him to write for your website.', 'ColinNewcomer', 'c05a921656fd80fa62eec53c02cc3b15', 0);
INSERT INTO `user` VALUES (3, 'Joe Fylan', 'C:\\Users\\YinLi\\Desktop\\images\\Joe Fylan.jpg', 'Joe has been using WordPress for many years, building many different types of websites along the way. Joe now enjoys working as a freelance content writer and is available for hire.', 'JoeFylan', 'ce6436f72a82043689edb99de26d18c8', 0);

SET FOREIGN_KEY_CHECKS = 1;
